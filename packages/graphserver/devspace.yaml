version: v2beta1
name: darta-graph-server
vars:
  DEVSPACE_ENV_FILE: ".env.production"


pipelines:
  dev:
    run: |-
      run_dependencies --all
      ensure_pull_secrets --all
      create_deployments --all
      start_dev app
  deploy:
    run: |-
      run_dependencies --all
      ensure_pull_secrets --all
      build_images --all -t ${DEVSPACE_GIT_COMMIT}-$(date +%s)
      create_deployments --all

images:
  darta-api:
    image: gcr.io/darta-dev/darta-api
    dockerfile: ./Dockerfile
    context: ../..
    buildKit:
      args: ["--platform=linux/amd64"]
    docker:
      args:
      - "--no-cache"
      - "--compress"
    buildArgs:
      ARANGO_URL: ${ARANGO_URL}
      ARANGO_USER: ${ARANGO_USER}
      ARANGO_PASSWORD: ${ARANGO_PASSWORD}
      ARANGO_DATABASE: ${ARANGO_DATABASE}
      FIREBASE_API_KEY: ${FIREBASE_API_KEY}
      FIREBASE_AUTH_DOMAIN: ${FIREBASE_AUTH_DOMAIN}
      PROJECT_ID: ${PROJECT_ID}
      FIREBASE_STORAGE_BUCKET: ${FIREBASE_STORAGE_BUCKET}
      FIREBASE_SENDER_ID: ${FIREBASE_SENDER_ID}
      FIREBASE_APP_ID: ${FIREBASE_APP_ID}
      FIREBASE_MEASUREMENT_ID: ${FIREBASE_MEASUREMENT_ID}
      MINIO_PORT: ${MINIO_PORT}
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_ENDPOINT: ${MINIO_ENDPOINT}
      MINIO_USE_SSL: ${MINIO_USE_SSL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      PORT: ${PORT}
      VERSION: ${VERSION}

deployments:
  darta-api:
    namespace: darta-main
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
        - image: gcr.io/darta-dev/darta-api
        buildKit:
          args: ["--platform=linux/amd64", '--no-cache', '--compress']
        service:
          ports:
          - port: ${PORT} # using variable here

  # traefik:
  #   namespace: traefik-v2
  #   helm:
  #     chart:
  #       name: traefik
  #       version: 23.2.0
  #       repo: "https://helm.traefik.io/traefik"
  #     values:
  #       service:
  #         type: LoadBalancer

  ingress:
    namespace: traefik-v2
    kubectl:
      manifests:
      - ../../charts/production/ingress-route.yaml

  https-redirect:
    namespace: traefik-v2
    kubectl:
      manifests:
      - ../../charts/production/https-redirect.yaml

dev:
  app:
    imageSelector: gcr.io/darta-dev/darta-root/next
    devImage: ghcr.io/loft-sh/devspace-containers/typescript:18-alpine
    sync:
    - path: ./packages/next
      uploadExcludePaths:
      - node_modules
      - .next
    - path: ./packages/next/package.json
      uploadExcludePaths:
      - node_modules
    - path: ./packages/next/tsconfig.json
    ssh:
      enabled: true
    proxyCommands:
    - command: devspace
    - command: kubectl
    - command: helm
    - gitCredentials: true
    ports:
    - port: ${PORT} # using variable here
    open:
    - url: http://localhost:${PORT} # using variable here

commands:
  migrate-db:
    command: |-
      echo 'This is a cross-platform, shared command that can be used to codify any kind of dev task.'
      echo 'Anyone using this project can invoke it via "devspace run migrate-db"'
