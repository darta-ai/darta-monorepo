version: v2beta1
name: darta-next

vars:
  DEVSPACE_ENV_FILE: ".env.production"



pipelines:
  dev:
    run: |-
      run_dependencies --all
      ensure_pull_secrets --all
      create_deployments --all
      start_dev app
  deploy:
    run: |-
      run_dependencies --all
      ensure_pull_secrets --all
      build_images --all -t ${DEVSPACE_GIT_COMMIT}-$(date +%s)
      create_deployments --all

images:
  next:
    image: gcr.io/darta-dev/darta-next
    dockerfile: ./Dockerfile
    context: ../..
    buildKit:
      args: ["--platform=linux/amd64"]
    docker:
      args:
      - "--no-cache"
      - "--compress"
    buildArgs:
      NEXT_PUBLIC_REACT_APP_FIREBASE_API_KEY: ${NEXT_PUBLIC_REACT_APP_FIREBASE_API_KEY}
      NEXT_PUBLIC_REACT_APP_FIREBASE_AUTH_DOMAIN: ${NEXT_PUBLIC_REACT_APP_FIREBASE_AUTH_DOMAIN}
      NEXT_PUBLIC_REACT_APP_PROJECT_ID: ${NEXT_PUBLIC_REACT_APP_PROJECT_ID}
      NEXT_PUBLIC_REACT_APP_FIREBASE_STORAGE_BUCKET: ${NEXT_PUBLIC_REACT_APP_FIREBASE_STORAGE_BUCKET}
      NEXT_PUBLIC_REACT_APP_FIREBASE_SENDER_ID: ${NEXT_PUBLIC_REACT_APP_FIREBASE_SENDER_ID}
      NEXT_PUBLIC_REACT_APP_FIREBASE_APP_ID: ${NEXT_PUBLIC_REACT_APP_FIREBASE_APP_ID}
      NEXT_PUBLIC_REACT_APP_FIREBASE_MEASUREMENT_ID: ${NEXT_PUBLIC_REACT_APP_FIREBASE_MEASUREMENT_ID}
      NEXT_PUBLIC_GOOGLE_MAPS_API_KEY: ${NEXT_PUBLIC_GOOGLE_MAPS_API_KEY}
      NEXT_PUBLIC_PORT: ${NEXT_PUBLIC_PORT}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL}
      NEXT_PUBLIC_ADMIN_UID: ${NEXT_PUBLIC_ADMIN_UID}
      NEXT_PUBLIC_ADMIN_EMAIL: ${NEXT_PUBLIC_ADMIN_EMAIL}



deployments:
  next:
    namespace: darta-next
    helm:
      chart:
        name: component-chart
        repo: https://charts.devspace.sh
      values:
        containers:
        - image: gcr.io/darta-dev/darta-next
        buildKit:
          args: ["--platform=linux/amd64"]
        docker:
          args:
          - "--no-cache"
          - "--compress"
        service:
          ports:
          - port: ${PORT}
          annotations:
            traefik.ingress.kubernetes.io/router.entrypoints: web
            traefik.ingress.kubernetes.io/router.middlewares: redirect-https@kubernetescrd
            traefik.ingress.kubernetes.io/router.tls: "true"
  # traefik:
  #   namespace: traefik-v2
  #   helm:
  #     chart:
  #       name: traefik
  #       version: 23.2.0
  #       repo: "https://helm.traefik.io/traefik"
  #     values:
  #       service:
  #         type: LoadBalancer

  ingress:
    kubectl:
      manifests:
      - ../../charts/production/ingress-route.yaml
  https-redirect:
    kubectl:
      manifests:
      - ../../charts/production/https-redirect.yaml


dev:
  app:
    imageSelector: gcr.io/darta-dev/darta-root/next
    devImage: ghcr.io/loft-sh/devspace-containers/typescript:18-alpine
    sync:
    - path: ./packages/next
      uploadExcludePaths:
      - node_modules
      - .next
    - path: ./packages/next/package.json
      uploadExcludePaths:
      - node_modules
    - path: ./packages/next/tsconfig.json
    ssh:
      enabled: true
    proxyCommands:
    - command: devspace
    - command: kubectl
    - command: helm
    - gitCredentials: true
    ports:
    - port: "1169"
    open:
    - url: http://localhost:1169

commands:
  migrate-db:
    command: |-
      echo 'This is a cross-platform, shared command that can be used to codify any kind of dev task.'
      echo 'Anyone using this project can invoke it via "devspace run migrate-db"'
